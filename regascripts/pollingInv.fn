!# pollingInv.fn 0.2
!#
!# Dieses Script gibt die Systemvariablen (inklusive unsichtbarer) als JSON String aus
!#
!# 7'2019 foxriver76 https://github.com/foxriver76 [basierend auf polling.fn (hobbyquaker)]
!#

object oSysVar;
string sSysVarId;
var sValue;
integer iValueType;
integer iValueSubType;
string sValueList;
boolean bFirst = true;

Write('{');

foreach (sSysVarId, dom.GetObject(ID_SYSTEM_VARIABLES).EnumIDs()) {
  !# we read them below
  if ((sSysVarId == 40) || (sSysVarId == 41)) {
   continue;
  }

  if (bFirst) {
    bFirst = false;
  } else {
    WriteLine(',');
  }

  oSysVar = dom.GetObject(sSysVarId);
  sValue = oSysVar.Value();
  iValueType = oSysVar.ValueType();
  iValueSubType = oSysVar.ValueSubType();
  sValueList = oSysVar.ValueList();

  Write('"' # sSysVarId # '":[');
  if (iValueType == 20) {
    Write('"');
    WriteURL(sValue);
    Write('"');
  } elseif ((iValueType == 16) && (iValueSubType == 29)) {
    if (sValue.VarType() == 2) {
      Write(sValue);
    } else {
      string sItem;
      integer iIndex = 0;
      string sIndex = "null";
      foreach(sItem, sValueList.Split(";")) {
        if ((sIndex == "null") && (sItem == sValue)) {
          sIndex = iIndex.ToString();
        }
        iIndex = iIndex + 1;
      }
      Write(sIndex);
    }
  } elseif (iValueType == 2) {
    if (sValue) {
      Write("true");
    } else {
      Write("false");
    }
  } elseif (sValue == "") {
    Write("0");
  }
  else {
    Write(sValue);
  }
  Write(',"' # oSysVar.Timestamp() # '"]');
}

if (bFirst) {
    bFirst = false;
} else {
    WriteLine(',');
}

oSysVar = dom.GetObject(40);
Write('"40":[' # oSysVar.Value() # ',"' # oSysVar.Timestamp() # '"]');

!# due to the fact that service messages can be automatically acknowledged, we have to loop over all and check
var servs = dom.GetObject(ID_SERVICES);
string id;
integer serviceMessages = 0;

foreach(id, servs.EnumIDs())
{
  var service = dom.GetObject(id);
  if(service) {
    if(service.IsTypeOf(OT_ALARMDP) && (service.Used() == true) && (service.Enabled() == true) && (service.AlState() == asOncoming)) {
      serviceMessages = serviceMessages + 1;
    }
  }
}
WriteLine(',');

oSysVar = dom.GetObject(41);
Write('"41":[' # serviceMessages # ',"' # oSysVar.Timestamp() # '"]}');
