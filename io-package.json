{
    "common": {
        "name": "hm-rega",
        "version": "1.7.2",
        "news": {
            "1.7.2": {
                "en": "Configuration dialog was corrected",
                "de": "Konfigurationsdialog wurde korrigiert",
                "ru": "Диалог конфигурации был исправлен",
                "pt": "A caixa de diálogo de configuração foi corrigida",
                "nl": "Configuratiedialoog is gecorrigeerd",
                "fr": "La boîte de dialogue de configuration a été corrigée",
                "it": "La finestra di configurazione è stata corretta",
                "es": "Se corrigió el diálogo de configuración",
                "pl": "Okno dialogowe konfiguracji zostało poprawione"
            },
            "1.7.1": {
                "en": "Forbidden characters were replaced",
                "de": "Verbotene Zeichen wurden ersetzt",
                "ru": "Запрещенные символы были заменены",
                "pt": "Caracteres proibidos foram substituídos",
                "nl": "Verboden karakters werden vervangen",
                "fr": "Les caractères interdits ont été remplacés",
                "it": "I personaggi proibiti sono stati sostituiti",
                "es": "Los personajes prohibidos fueron reemplazados",
                "pl": "Zabronione postacie zostały zastąpione"
            },
            "1.7.0": {
                "en": "Ready for Admin3",
                "de": "Bereit für Admin3",
                "ru": "Готово для Admin3",
                "pt": "Pronto para Admin3",
                "nl": "Klaar voor Admin3",
                "fr": "Prêt pour Admin3",
                "it": "Pronto per Admin3",
                "es": "Listo para Admin3",
                "pl": "Gotowy na Admin3"
            },
            "1.6.6": {
                "en": "Fix error if Lan Interfaces exits",
                "de": "Fehler behoben wenn Lan Interfaces vorhanden sind",
                "ru": "Fix error if Lan Interfaces exits"
            },
            "1.6.5": {
                "en": "Read DutyCycle and other params from listBidcosInterfaces\nChange adapter logging of new values to debug\nConfig Settings changed to set defaults after update adapter",
                "de": "Auslesen des DutyCycle und weiterer Paramater des listBidcosInterfaces\nAdapter Logging der neuen Werte auf debug gestellt\nKonfigurationseinstellungen überarbeitet um die Default-Werte nach einem Adapter-Update zu setzen",
                "ru": "Read DutyCycle and other params from listBidcosInterfaces\nChange adapter logging of new values to debug\nConfig Settings changed to set defaults after update adapter"
            },
            "1.5.0": {
                "en": "Also update names of states when syncing with CCU",
                "de": "Bei der Synchronisation mit der CCU werden auch State-Namen aktualisiert",
                "ru": "Also update names of states when syncing with CCU"
            },
            "1.4.8": {
                "en": "Fix values conversion for CUxD",
                "de": "Korrigiere die Kalkulation von CUxD Werten",
                "ru": "Fix values conversion for CUxD"
            },
            "1.4.4": {
                "en": "small fix",
                "de": "Kleine Fehlerbehebung",
                "ru": "small fix"
            },
            "1.4.3": {
                "en": "respect settings and only sync variables and programs if selected in settings",
                "de": "Respektieren der Einstellungen zum Syncen der Variablen und Programme und nur dann syncen wenn ausgewählt",
                "ru": "respect settings and only sync variables and programs if selected in settings"
            },
            "1.4.2": {
                "en": "remove error log in CCU by start",
                "de": "Verhindern von der Fehlermeldung in CCU beim Start",
                "ru": "remove error log in CCU by start"
            },
            "1.4.1": {
                "en": "merge rooms, functions and favorites with existing one",
                "de": "merge rooms, functions und favorites mit aktuellen Werten",
                "ru": "Объединять комнаты с существующими значениями"
            },
            "1.4.0": {
                "en": "Add HMIP support",
                "de": "HMIP-Unterstützung hinzugefügt",
                "ru": "Add HMIP support"
            },
            "1.3.0": {
                "en": "update states only if changed",
                "de": "Zustände nur bei der Änderung updaten",
                "ru": "Обновлять состояния только, если изменились"
            },
            "1.2.1": {
                "en": "fix initial read of states",
                "de": "fix initial read of states",
                "ru": "fix initial read of states"
            },
            "1.2.0": {
                "en": "read variables anew if connection of rfd detected\nread alarms\nsupport of acknowledgment of alarms",
                "de": "read variables anew if connection of rfd detected\nread alarms\nsupport of acknowledgment of alarms",
                "ru": "read variables anew if connection of rfd detected\nread alarms\nsupport of acknowledgment of alarms"
            },
            "1.1.1": {
                "en": "fix min/max for variables",
                "de": "fix min/max for variables",
                "ru": "fix min/max for variables"
            }
        },
        "title": "HomeMatic ReGaHSS",
        "desc": {
            "en": "Connects HomeMatic CCU \"Logic Layer\" (\"ReGaHSS\") to ioBroker",
            "de": "Verbindet die Logikschicht einer HomeMatic CCU (\"ReGaHSS\") mit ioBroker",
            "ru": "Соединяет модуль логики системы Homematic CCU (\"ReGaHSS\") с ioBroker",
            "pt": "Conecta o HomeMatic CCU \"Layer Lógica\" (\"ReGaHSS\") para ioBroker",
            "nl": "Verbindt HomeMatic CCU \"Logic Layer\" (\"ReGaHSS \") met ioBroker",
            "fr": "Connecte HomeMatic CCU \"Logic Layer\" (\"ReGaHSS\") à ioBroker",
            "it": "Collega HomeMatic CCU \"Logic Layer\" (\"ReGaHSS\") a ioBroker",
            "es": "Conecta CCU HomeMatic \"Capa lógica\" (\"ReGaHSS\") a ioBroker",
            "pl": "Łączy HomeMatic CCU \"Logic Layer\" (\"ReGaHSS\") z ioBroker"
        },
        "dependencies": [
            "hm-rpc"
        ],
        "authors": [
            "hobbyquaker <hq@ccu.io>",
            "bluefox <dogafox@gmail.com>"
        ],
        "license": "MIT",
        "mode": "daemon",
        "platform": "Javascript/Node.js",
        "loglevel": "info",
        "materialize": true,
        "readme": "https://github.com/ioBroker/ioBroker.hm-rega/blob/master/README.md",
        "icon": "homematic.png",
        "compact": true,
        "extIcon": "https://raw.githubusercontent.com/ioBroker/ioBroker.hm-rega/master/admin/homematic.png",
        "keywords": [
            "homematic",
            "eq3",
            "regahss",
            "ccu1",
            "ccu2"
        ],
        "localLink": "http://%homematicAddress%",
        "type": "iot-systems"
    },
    "native": {
        "homematicAddress": "192.168.0.100",
        "homematicPort": 8181,
        "reconnectionInterval": 30,
        "polling": true,
        "pollingInterval": 30,
        "pollingTrigger": "BidCoS-RF.50.PRESS_SHORT",
        "rfdEnabled": true,
        "rfdAdapter": "hm-rpc.0",
        "hs485denabled": false,
        "hs485dAdapter": "hm-rpc.1",
        "cuxdEnabled": false,
        "cuxdAdapter": "hm-rpc.2",
        "hmipEnabled": false,
        "hmipAdapter": "hm-rpc.3",
        "syncVariables": true,
        "syncPrograms": true,
        "syncNames": true,
        "syncRooms": true,
        "enumRooms": "enum.rooms",
        "syncFunctions": true,
        "enumFunctions": "enum.functions",
        "syncFavorites": true,
        "enumFavorites": "enum.favorites"
    },
    "objects": [
        {
            "_id": "_design/hm-rega",
            "language": "javascript",
            "views": {
                "variables": {
                    "map": "function(doc) {\n  if (doc._id.match(/^hm-rega\\.[0-9]+\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === 'ALARMDP' || doc.native.TypeName === 'VARDP')) {\n   emit(doc._id, doc);\n  }\n}"
                },
                "programs": {
                    "map": "function(doc) {\n  if (doc._id.match(/^hm-rega\\.[0-9]+\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === 'PROGRAM')) {\n   emit(doc._id, doc);\n  }\n}"
                }
            }
        }
    ],
    "instanceObjects": [
        {
            "_id": "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id": "info.connection",
            "type": "state",
            "common": {
                "role": "indicator.connected",
                "name": "If connected to CCU",
                "type": "boolean",
                "read": true,
                "write": false,
                "def": false
            },
            "native": {}
        },
        {
            "_id": "info.ccuReachable",
            "type": "state",
            "common": {
                "role": "indicator.connected",
                "name": "If connected to CCU on IP layer",
                "type": "boolean",
                "read": true,
                "write": false,
                "def": false
            },
            "native": {}
        },
        {
            "_id": "info.ccuRegaUp",
            "type": "state",
            "common": {
                "role": "indicator.connected",
                "name": "If rega is UP",
                "type": "boolean",
                "read": true,
                "write": false,
                "def": false
            },
            "native": {}
        }
    ]
}